mailChimp:
https://mailchimp.com/
j.easwaran@vectone.com
12Asdfgh@

------------------------------------------
Generate Marketing automation jar.
sbt compile
set JAVA_OPTS=-Xmx2G
sbt assembly

------------------------------

Import projects in Intellij
Git Login:
http://git.mundio.com/Hadoop/droolsmodeltest.git
j.easwaran@vectone.com 
12Asdfgh


below git path to be used in 15 server:
http://10.22.3.12/Hadoop/droolsmodeltest.git

http://10.22.3.12/Hadoop/Rulebackend.git
http://10.22.3.12/Hadoop/Rulecreator.git
http://10.22.3.12/Hadoop/Droolsrule.git

http://git.mundio.com/Hadoop/Droolsrule.git
http://git.mundio.com/Hadoop/Rulebackend.git
http://git.mundio.com/Hadoop/Rulecreator.git
http://git.mundio.com/Hadoop/Droolsrule.git




Bitbucket credentials:
======================
s.abkari@vectone.com
password@123

Console logs:
http://slave3.mundio.com:8042/logs/
------------------------------------------------------------------------------------------------

a) OPen Intellij.
b) New --> Project from Version controller --> Git
c)  Give the Git path --> Test 
d) Once Git established successfully , Click OK & Clone.
e) Project will be created along with dependencies.

Note: To checkout the changes from GIT. Right click Project --> Git --> Repository --> Pull --> Pull 

Cluster : https://Easwaran1212@bitbucket.org/sinchan_banerjee/marketingautomation.git

Rule Engine : https://Easwaran1212@bitbucket.org/sinchan_banerjee/droolsrule.git

RuleEdior: https://Easwaran1212@bitbucket.org/sinchan_banerjee/ruleeditor.git : seems to be old.
Latest Rule Editor : https://Easwaran1212@bitbucket.org/sinchan_banerjee/rulebackend.git

Rule creator : https://Easwaran1212@bitbucket.org/sinchan_banerjee/rulecreator.git  : Not required?

Python script:
https://Easwaran1212@bitbucket.org/sinchan_banerjee/autoruledeployer.git




Step 1 (Event Data loading into .Net Application)>>>>DROOL API
===============================================================
This REST (webservice) Application will receive the events from various clients (website,mobilesite...) 
& send the event to .net Application.
 
 IP : 192.168.14.249 (windows)  13.85
 VNC : asdf
password : qazwsx
C:\Users\b.sinchan\Desktop\Kafka Producer>java -jar kafkaproducer-1.0-SNAPSHOT.jar


Trigering Event through API:
-------------------------------------------------------------------------------------
http://192.168.14.249:8080/producer/send
	
	Content-Type: application/json
	
	{
  "topic":"eventtopic",
  "key":"bundle_customer",
  "message":"{\"bundleID\":12,\"actionType\":\"subscribebundle\",\"status\":1,\"mobileNo\":420794099805,\"mvbpStatus\":1,\"updateBy\":\"USSD\",\"currCode\":\"CZK\"}"
}


{"bundleID":5,"status":1,"mobileNo":"420795000403","mvbpStatus":2,"currCode":"CZK","updateBy":"USSD","actionType":"subscribebundle"}


{"bundleID":5,"status":1,"mobileNo":"420795000403","mvbpStatus":2,"currCode":"CZK","updateBy":"USSD","actionType":"topup"}


{"key":"bundle_customer","topic":"eventtopic","message":"{\"CallDate\":\"2017-10-11T08:56:51\",\"mobileno\":\"420794099805\",\"Destcode\":\"Ghana_MobileMTN\",\"Trffclass_Description\":\"Master Tariff Class\",\"trffclass\":\"MUCZ\",\"talktime\":1.03,\"Country\":\"Czech Republic\",\"siteCode\":\"MCZ1\",\"reportype\":\"CALL\",\"actionType\":\"CDRData\"}"}


{"key":"bundle_customer","topic":"eventtopic","message":"{\"CallDate\":\"2017-10-11T08:56:51\",\"mobileno\":\"420794099805\",\"Destcode\":\"Ghana_MobileMTN\",\"Trffclass_Description\":\"Master Tariff Class\",\"trffclass\":\"MUCZ\",\"talktime\":1.03,\"Country\":\"Czech Republic\",\"siteCode\":\"MCZ1\",\"reportype\":\"CALL\",\"actionType\":\"NoTopUp\"}"}


420794015776

New Kafka producer.

Server IP 	82.113.66.66
User Name	administrator
Password	M0b1leAp12ol7


new URL : http://82.113.66.66:8080/producer/send

-------------------------------------------------------------------------------------


 Username  :  a.srinithin

Password  :  srinithin321

PayG CRM - http://192.168.1.230:8181/
PayM CRM - http://192.168.1.230:3695



Hello

Please login to below server 
82.113.72.213
administrator/rec345$


Triggering event through website:

Mobile No : 420794099805

http://192.168.1.230:8181/

Enter mobile no --> Go --> select Customer --> Product  --> 

http://staging.vectonemobile.cz 

a) Bundles --> National Bundles --> Click on Buy of any czk  --> Mobile No & Confirm mobile no --> 
b) For verification code : View source : serach for:  frmss & copy the value & decode it in (https://www.base64decode.org/)
c) Enter verification code & proceed --> confirm.


Logs check :
IP : 192.168.14.249 (windows)
VNC : asdf
user id : b.sinchan
password : qazwsx
Producer log : C:\Users\b.sinchan\Desktop\Marketingautomationpublishedcode
consumer log in 249  : C:\Users\b.sinchan\Desktop\testAppln1\testAppln\bin\Debug

-------------------------------------------------------------------------------------

Step 2 (Kafka-Zookeeper Start)
===============================

Open New Terminal USE PUTTY (10.22.3.74) devuser2/mundio@123

cd /usr/hdp/current/kafka-broker

bin/kafka-console-consumer.sh --zookeeper master.mundio.com:2181 --topic eventtopic --from-beginning

Step 3 (Kafka - Kafka Server /bootstrap Start)
==============================================

New Terminal USE PUTTY (10.22.3.74) devuser2/mundio@123
cd /usr/hdp/current/kafka-broker

bin/kafka-console-consumer.sh --zookeeper 10.22.3.70:2181 --bootstrap-server 10.22.3.70:6667 --topic bundlenotify --from-beginning

Data should replicate in this window.


Step 4  (Spark Jar Execution)
==============================
New Terminal USE PUTTY (10.22.3.74) devuser2/mundio@123

cd /usr/hdp/current/spark2-client

 ./bin/spark-submit --class com.mundio.mat.Driver --master yarn-client --deploy-mode client --conf "spark.executor.extraClassPath=/usr/hdp/current/hbase-client/conf/:/usr/hdp/current/phoenix-client/phoenix-4.7.0.2.5.0.0-1245-client.jar" --num-executors 4 --driver-memory 1G --executor-memory 8G --executor-cores 1 /home/devuser2/MarketingAutomation-assembly-1.0.jar


Step 5 : Rule Engine  (Spark application send event along with data to rule engine)
===================================================================================

 10.22.3.52 (unix) Open (Putty/Vnc)
 userid : root
 password: vicarage2000
 /root/RuleEngine/droolsrule> mvn spring-boot:run
 
 Rule Deployment path : /root/RuleEngine/droolsrule/src/main/resources/rules
 
 
{
  "key": "bundle_customer",
  "topic": "eventtopic",
  "message": "{\"callDate\":\"2017-10-11T08:56:51\",\"mobileNo\":\"420794099805\",\"destCode\":\"Ghana_MobileMTN\",\"trffclassDescription\":\"Master Tariff Class\",\"trffclass\":\"MUCZ\",\"talkTime\":1.03,\"country\":\"Czech Republic\",\"siteCode\":\"MCZ\",\"reportType\":\"CALL\",\"actionType\":\"CDRData\"}"
}


{
  "key": "bundle_customer",
  "topic": "eventtopic",
  "message": "{\"callDate\":\"2017-10-11T08:56:51\",\"mobileNo\":\"420794042353\",\"tariffClass\":\"MUCZ\",\"talkTime\":1.03,\"msisdn\":\"MSIDSN\",\"firstUpdate\":\"2017-09-14\",\"gprsAllocation\":\"9100.24\",\"siteCode\":\"MCZ\",\"actionType\":\"NoTopUp\"}"
}



Step 6 (Rule Creation / updatation)       >>> DROOL API
=======================================================
 
REST API, provies the following
  a) GET APIs (json) to get models & properties along with data types.
  b) POST API (xml) to create DRL files for rules. 
                
82.113.66.15 (windows)
password (Administrator) : Vicarage_2012
VNC password : picas0

C:\RuleEditorBackend\rulebackend\target> java -jar rule-editor-1.0-SNAPSHOT.jar

Java file generation path : C:\RuleEditorBackend\rulecreator\src\main\java\com\rulegenerator\generated
class path :                C:\RuleEditorBackend\rulecreator\target\classes\com\rulegenerator\generated

drl generation path : C:/RuleEditorBackend/droolsrule/src/main/resources/rules/

Winscp --> File zilla.





https://mail-delta.squay.com/owa/auth/logon.aspx 
 





